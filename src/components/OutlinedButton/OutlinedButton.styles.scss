@use "../../styles/tokens";

.OutlinedButton {
  background-color: tokens.$color-background-outlined-enabled;
  border-radius: tokens.$border-radius-button-default;
  border: tokens.$size-border-button-default
    tokens.$color-border-outlined-enabled solid;
  color: tokens.$color-text-button-outlined-enabled;

  font: {
    size: tokens.$font-size-button-m;
    family: tokens.$font-family-button;
    weight: tokens.$font-weight-button;
  }

  line-height: tokens.$font-line-height-button-m;

  white-space: nowrap;
  height: tokens.$size-button-l;

  padding: tokens.$spacing-button-default-vertical-l
    tokens.$spacing-button-default-horizontal-l;

  &--Medium {
    height: tokens.$size-button-m;
    padding: tokens.$spacing-button-default-vertical-m
      tokens.$spacing-button-default-horizontal-m;
  }

  &--Small {
    height: tokens.$size-button-s;
    padding: tokens.$spacing-button-default-vertical-s
      tokens.$spacing-button-default-horizontal-s;
  }

  &__Icon {
    width: tokens.$size-icon-m;
    height: tokens.$size-icon-m;
    fill: currentColor;

    position: static;
    display: inline-block;
    vertical-align: bottom;

    &--Spaced {
      margin-right: tokens.rem(4);
    }
  }

  &:hover {
    background-color: tokens.$color-background-outlined-hover;
    border-color: tokens.$color-border-outlined-hover;
    box-shadow: none;
    cursor: pointer;
    outline: none;
  }

  &:focus {
    background-color: tokens.$color-background-outlined-focus;
    border-color: tokens.$color-border-outlined-focus;
    box-shadow: tokens.$shadow-button-outlined-focus;
    cursor: pointer;
    outline: none;
  }

  .js-focus-visible &:focus:not([data-focus-visible-added]) {
    background-color: tokens.$color-background-outlined-focus-polyfill;
    border-color: tokens.$color-border-outlined-focus-polyfill;
    box-shadow: none;
    cursor: pointer;
  }

  &:active {
    background-color: tokens.$color-background-outlined-active;
    border-color: tokens.$color-border-outlined-active;
    box-shadow: none;
    cursor: pointer;
    outline: none;
  }

  &:disabled {
    background-color: tokens.$color-background-outlined-disabled;
    border-color: tokens.$color-border-outlined-disabled;
    box-shadow: none;
    outline: none;
    cursor: not-allowed;
    color: tokens.$color-text-button-outlined-disabled;

    &:hover,
    &:focus {
      cursor: not-allowed;
    }
  }

  &--IconOnly {
    border-color: tokens.$color-border-icon-button-enabled;
    color: tokens.$color-icon-button-outlined-enabled;

    padding: tokens.$spacing-button-icon-vertical-l
      tokens.$spacing-button-icon-horizontal-l;

    &--Medium {
      padding: tokens.$spacing-button-icon-vertical-m
        tokens.$spacing-button-icon-horizontal-m;
    }

    &--Small {
      padding: tokens.$spacing-button-icon-vertical-s
        tokens.$spacing-button-icon-horizontal-s;
    }

    &:hover {
      border-color: tokens.$color-border-icon-button-hover;
      color: tokens.$color-icon-button-outlined-hover;
    }

    &:focus {
      border-color: tokens.$color-border-icon-button-focus;
      color: tokens.$color-icon-button-outlined-focus;
    }

    .js-focus-visible &:focus:not([data-focus-visible-added]) {
      border-color: tokens.$color-border-icon-button-focus-polyfill;
      color: tokens.$color-icon-button-outlined-focus;
    }

    &:active {
      border-color: tokens.$color-border-icon-button-active;
      color: tokens.$color-icon-button-outlined-active;
    }

    &:disabled {
      border-color: tokens.$color-border-icon-button-disabled;
      color: tokens.$color-icon-button-outlined-disabled;
    }
  }
}
